package p004o;

/* renamed from: o.sp */
public final class C0751sp extends C0660pj {
    public C0751sp() {
        this.f4554 = 100;
        this.f4596 = 1079;
        this.f4585 = 150;
        this.f4579 = 2108;
        this.f4588 = 1080;
        this.f4555 = 631;
        this.f4556 = 688;
        this.f4557 = 477;
        this.f4598 = 506;
        this.f4582 = 636;
        this.f4558 = 2085;
        this.f4559 = 2134;
        this.f4560 = 2135;
        this.f4561 = 151;
        this.f4589 = 152;
        int[] iArr = {this.f4554, this.f4585, this.f4596, this.f4579, this.f4588, 4098};
        int[] iArr2 = {this.f4561, this.f4560, this.f4559};
        byte[] bArr = {126, 74, 59, -122, -75, -10, -3, -99, -91, 4, 53, 125, 30, 103, -104, -20, 68, -34, -114, -104, 34, -23, 6, 46, 24, -127, -89, 62, -5, 42, -29, -71, -121, 107, 101, 22, -91, -50, 100, 122, -46, 99, 103, -16, 57, -11, 106, 23, 18, -11, 7, -77, 25, -74, -10, 47, 6, 5, 48, 98, -28, 62, 99, 37, -72, 102, 9, -87, -59, 109, 113, -12, 110, 16, 93, -117, -125, 24, -93, -91, 103, 90, -22, -121, -16, 69, 110, 61, -20, -54, -16, 101, 32, -120, -80, -51, 53, 116, -103, 2, -19, 104, 3, 19, 17, 101, -86, -74, -39, -44, -49, -108, 112, 40, -118, 70, -83, -85, 71, 107, -83, -50, 20, -28, 117, 81, -109, -125, -78, 18, -64, 70, 76, 89, -20, 120, -28, 1, -108, 67, -18, 54, -17, -124, 108, -66, -26, -119, -91, 6, -52, -13, 61, 81, 122, 98, 2, 102, -60, -75, 122, -127, 90, 34, 97, -35, 118, 114, -86, -61, 19, -30, -58, 75, 117, -73, 49, 64, 56, -51, 5, 116, 64, -78, 37, 87, -74, -62, -76, 25, -14, 123, 108, 71, 118, -99, -127, 24, -39, 110, 52, -43, -43, -82, 60, -90, 75, -106, -91, -108, -24, -15, -56, -101, 87, 41, -127, -89, 16, 81, -47, -69, -66, -113, 123, -84, -39, 114, 86, -84, 70, Byte.MIN_VALUE, -24, -96, -68, -95, 126, 95, 76, 46, -58, -27, 22, 60, -60, 33, 58, 124, 5, -49, 2, -72, -16, 41, -65, 78, -85, 62, -3, -77, -38, 70, 94, 95, -60, -47, 94, 27, 13, 16, 71, -84, -92, -92, 19, 84, -97, 50, -122, 117, -12, 30, -68, -117, 124, 61, 34, -70, -105, -51, 14, -3, -30, -110, -70, -28, -42, -38, -125, -35, -67, -42, -126, -25, -29, -125, 102, -58, -45, 125, -51, Byte.MAX_VALUE, 42, -88, 36, 64, -75, -41, 123, 121, 111, -16, -22, -52, 16, 66, -27, 17, 66, 115, 42, 18, -68, 87, 53, -42, 60, 121, 75, 4, 48, 55, 19, -83, 18, -59, 78, -82, 48, 94, -90, 86, 115, 34, -86, 5, 92, 11, 93, -122, -66, -107, 3, -62, 5, 54, 10, 20, -6, -64, -81, -33, 88, -106, -47, -77, 46, -109, -120, -107, -45, 57, -27, -67, -5, -104, -109, -22, 21, -88, -107, 12, -106, 126, 117, 95, -22, -96, -94, 97, 126, -39, 53, 19, -63, -41, 117, -22, -110, 113, -48, -108, 92, -43, 21, 66, 113, 28, 35, -86, -39, -43, -12, 12, 42, 49, 25, -70, 18, -61, -110, -94, 61, 8, -78, 58, 56, -70, -33, -48, 105, -126, 91, -78, -40, -93, Byte.MIN_VALUE, -103, -47, -82, 11, 82, -95, -42, -42, 22, -21, -14, 61, -115, 116, 82, -31, 94, 61, 81, 52, -42, -39, -126, 101, -124, -17, 48, 16, 89, -83, -104, 106, -100, -79, -71, -83, 83, -78, 111, -118, -36, -29, -50, -32, 114, 97, -126, 13, -63, 29, -126, -10, -54, 25, 118, 79, 76, -9, -91, 9, 85, -110, -85, 10, -53, -75, -22, -92, 4, -86, 105, 82, 55, 45, 19, -68, 105, 121, 16, -126, -101, 11, -88, 109, -33, -66, -30, 91, 16, 101, 84, 24, -41, -109, 91, 7, -58, 24, 52, 60, -96, -6, -109, -26, -95, -11, -48, 55, -44, 51, -71, -89, -32, -52, -104, 63, 67, 99, 23, 57, -34, -77, -18, -66, 117, 16, -89, 2, 84, -89, -56, -11, 70, 103, 63, 112, -73, -125, 94, -17, -4, -41, 65, -44, -88, 58, 105, 69, -125, 118, -26, 15, -26, -19, -18, -75, -87, 59, 21, -116, 93, 70, -93, 5, 119, 10, 65, 16, -65, -85, -41, -73, -116, 5, -19, 85, 48, 64, -12, -113, -106, 59, -87, -11, Byte.MAX_VALUE, 54, 15, 103, -47, 31, 43, -85, 113, -22, 34, -46, 26, -50, 116, 89, -99, -39, 24, 20, 20, 44, -119, -24, -43, -35, -37, -33, -45, 71, 60, -7, -98, 66, -48, -12, 45, 21, -9, 89, 65, 30, -32, -5, 121, -11, 53, -48, -34, 13, 68, 62, 5, -108, -29, 68, 29, -89, 34, 45, -8, -121, 124, -100, 100, -39, -9, -81, -30, -51, -116, 4, -93, 34, 11, -49, -60, -107, -27, 115, -80, -39, -64, -92, 57, 86, -49, -113, -80, 71, -120, 33, -91, 56, 78, 83, -113, -36, -116, -95, 123, -52, -5, -114, -111, -61, 7, 83, 12, 22, -21, -80, -26, 102, -73, -24, 106, 96, -94, -26, 89, -10, -30, -101, 93, -19, -101, -122, 6, 58, -38, 5, 100, -23, 96, -51, -87, -84, 33, 64, -58, -78, 49, 105, -9, -19, -104, -34, -72, -13, -74, 88, 9, -120, -69, 46, 10, 15, -52, -109, -48, 120, -15, -55, 112, -48, 86, 12, 45, 22, 108, 2, -48, -3, 36, 118, -2, -64, -109, -111, 39, -89, 109, 106, -47, -34, -122, 31, 119, -42, 84, -53, 28, -80, 40, 18, 83, 3, 124, 8, -126, -17, -67, -72, -27, -36, -76, -94, 59, 65, 34, 62, 29, 100, 38, 20, -19, -13, 123, -24, 86, -47, -93, -13, -72, 16, 19, -74, -89, 82, 122, -14, -77, -70, 45, -70, -86, 7, -40, -84, -115, 103, 122, -42, -27, 103, 74, -63, -73, 82, -107, -69, 58, -27, 52, 68, -100, -42, 17, -61, -24, -27, 118, 114, 109, 14, 25, 15, 36, 9, -116, -57, Byte.MIN_VALUE, 61, -99, 34, -79, -61, -63, -46, -82, -101, 19, 120, 28, -57, 1, 106, 95, 92, -63, 119, -6, -69, 31, 33, -125, 19, 34, -15, -67, 69, -54, 26, -69, 99, -53, 19, -110, 94, 126, -101, 120, -125, -10, -74, 89, 3, -120, 8, -66, 8, -120, -59, 34, 34, 35, 14, -22, -121, -84, 85, -59, -18, -107, 63, -113, -116, 13, 30, -127, -15, 112, -28, -37, -46, 11, 64, 48, -11, -48, 49, -101, 88, 13, -43, 7, 62, -72, -71, 61, -65, 98, -36, -20, -113, 115, -58, 110, 34, 42, 99, 88, -117, -114, -23, -60, 100, 87, -109, 70, 83, -34, -17, 122, 93, 61, -124, -72, 6, 23, 28, -72, -96, -80, 96, -53, 4, 109, 51, 111, 25, 49, -42, 88, -116, 85, 90, -62, -86, 44, 99, -93, 35, 65, -65, -123, -67, -56, -33, 39, 70, 124, 29, 63, -92, 73, 110, -37, 124, 18, 123, 78, -58, -12, 35, 35, 44, 65, 90, 11, 40, -100, -106, 54, 62, 4, 19, -121, -79, -93, 45, -88, 30, 40, 27, 86, -39, 32, -60, -5, -2, 114, -117, 104, -115, 12, 38, -63, -14, -43, 3, -13, -11, 34, 71, 76, -44, -66, 79, 114, -120, -124, 98, -11, -126, -33, 104, 41, 99, -18, 91, -19, 98, 36, 65, -63, 3, -49, 112, -99, -66, -102, 95, 123, 64, 113, -61, -101, 105, -122, 75, 92, -96, -23, 43, 45, 58, 108, -53, 4, 118, -78, 87, -41, -43, -64, -17, -127, 83, 94, -57, 8, -64, 26, -17, -66, -58, 80, -113, 60, -46, -10, 86, 124, -17, -110, -26, -50, 97, 25, 126, 89, -35, 45, -105, 69, -41, -27, 95, -15, 62, 26, 38, 50, 1, 97, -88, -125, 95, 63, 96, -87, -70, -80, 49, -81, 2, -125, -86, -64, 104, -73, -81, 64, 119, 98, 43, -93, 62, -75, 73, 1, 21, 41, -72, 54, -42, -125, -16, -79, -17, 38, 32, -59, 33, -41, -114, 120, -15, -125, 60, 77, 18, 28, 126, -17, -73, -99, 87, -58, 49, -44, -35, 67, 65, 117, 96, 14, 113, 24, -90, -45, 118, 47, 110, 84, 88, -110, -102, 122, 113, 31, -104, 32, -11, -97, -124, -56, -95, 105, 21, -30, 47, 110, -65, -18, 62, -83, 52, 25, -46, 58, -106, 28, 3, -54, 30, -3, 8, 14, -17, -3, -59, -88, 109, -53, -127, -98, 73, 76, -48, 24, 16, -109, -122, 47, 6, 95, -103, 68, -5, 27, -49, -122, 8, -37, -71, 43, -76, 78, 42, 120, -95, 113, -56, -80, 32, -59, 114, 121, 76, 32, 116, 63, 41, 88, -35, -56, 59, -111, 118, -19, 55, 59, -110, -95, -80, 13, 82, 71, -19, 54, -115, -122, 51, 101, 103, 19, -57, 102, -35, 22, -2, -116, -51, 55, 117, 17, -83, 113, 94, 43, 14, -91, -107, -124, -104, 49, -66, -54, -102, 90, 55, -118, -44, -17, -99, -114, 34, 105, -82, 108, -85, -37, 71, -126, 52, -99, 60, -122, -62, -31, -29, -15, 42, -86, 125, -26, -77, -33, -48, -44, -16, -29, 51, 3, 118, 111, 78, 69, 15, 20, 85, -9, 22, -73, 34, 18, -112, 84, -6, -31, -68, 88, 49, 81, -85, -3, -120, -75, -118, 92, 122, 14, -54, 40, 56, 60, -66, -60, 39, 7, -41, 56, 112, 16, 47, 26, -11, -16, -32, 126, -31, 49, 18, 22, -94, -42, -125, -28, -125, 40, 22, -39, 69, 1, 47, 44, -47, -74, -54, 52, 124, 117, 57, -67, -28, -100, 88, 120, -21, -7, 57, -121, -43, -25, 10, 97, -122, -75, -70, -22, -16, -39, -92, 15, -85, 87, -68, 60, -67, -42, 14, 6, -105, -45, 5, 80, 80, -21, 75, 74, 23, -86, -65, -102, 110, 92, -62, 3, -97, 69, 107, -35, 6, -54, 86, -75, -97, 98, 33, 103, 111, -27, -49, 4, -77, -117, 32, 96, 1, -82, 19, 13, -94, 36, -84, -86, -7, 72, 44, -55, -92, Byte.MIN_VALUE, 70, -49, -84, -36, 36, 13, -126, -108, -94, Byte.MIN_VALUE, -117, -114, 42, 34, -124, 42, 3, -95, -5, -6, -113, 65, 44, -83, 80, 107, -11, -54, -117, -121, -63, -121, -115, -105, Byte.MIN_VALUE, 89, -44, 87, -82, 8, -104, 32, -19, -30, 12, 75, 46, -32, -69, -115, 119, -55, -13, 107, 70, 48, 12, 87, 27, 101, 120, 16, -107, -102, -104, 78, 85, 105, 7, 92, 111, 118, 111, 31, 38, -43, 56, -65, -55, 3, -21, 95, -34, -9, 73, 21, 118, -71, 86, 42, -51, -2, -32, -66, -78, 35, -46, -46, -81, -98, -84, -28, 4, 64, 40, -99, 116, -64, -59, 56, 99, -117, -56, 23, 82, 72, -23, 73, -75, 125, 57, -27, -83, -31, -123, -17, 33, -87, 60, 70, -55, -22, -116, 65, 34, 106, 85, Byte.MIN_VALUE, -48, 96, -98, 20, -5, 22, 27, 120, -91, -34, -122, -102, -14, 79, -46, 79, -119, -68, -6, 7, -38, -34, 102, 16, 16, -90, -66, -62, -17, 27, -95, 107, -28, -46, 2, 55, -119, 98, 64, -116, 95, -59, -95, -101, 17, 43, 87, -16, -27, -94, 42, 103, -50, -107, -6, 89, -92, 13, -79, -63, -118, 31, -58, 77, -112, -97, -124, -120, 117, -41, 42, -97, -68, 106, -107, 102, -28, 44, -118, -107, 124, 8, 79, 124, -31, 68, 51, -111, 93, 61, 40, 24, -126, 103, -106, -46, 101, -83, 9, -13, -100, -3, -36, -64, -86, -98, -117, -106, -72, -105, -58, -49, -72, -56, 124, 52, -25, -124, -34, -23, 67, 58, -74, -93, -38, 7, -13, 111, -87, 73, 78, -22, 78, -126, -14, 69, -50, -106, -124, 78, 75, 80, 124, -12, -69, 35, 21, 126, 47, -105, -31, -40, 20, 108, 72, -57, 11, 52, -39, -38, -40, -94, 97, -34, -47, 53, -105, 69, 1, 109, 84, -79, -52, 98, 44, -99, 90, 57, 82, 82, 116, 95, 50, 24, 64, 30, -104, 107, 1, -51, -47, -112, 32, -50, 36, -57, 94, -117, -113, 28, 74, -98, 35, 104, 102, -6, -19, 39, 28, -111, 65, -88, 108, 98, 93, 38, 111, Byte.MAX_VALUE, 59, 120, -101, 82, 125, -50, -30, -59, 78, -94, -94, 30, -84, -23, -20, 13, -21, 31, 47, 108, 105, -78, -67, 22, 65, Byte.MAX_VALUE, -68, 76, Byte.MIN_VALUE, 69, -7, -93, 21, -34, -82, 101, 17, 24, -72, 100, -22, 110, -67, 42, 90, 19, 90, 125, -3, -120, 54, -85, -35, -91, 49, -106, 9, -41, -127, -21, -49, -6, -19, 2, -32, 16, 3, 79, 84, -74, 106, 106, -40, 46, -57, -112, 21, -64, 60, -104, -3, 86, -3, -47, 31, 41, 25, 68, -95, -72, 72, 51, -110, -110, 11, -11, 44, 2, 83, 122, -93, -79, -10, 125, 74, 106, -59, 86, -18, 93, 108, 109, 100, -60, 124, 31};
        this.f4570 = bArr;
        mo4070(268435469, -1219264950, -2105920368, 88, -112, 36, -30, 2016101402, 561911578, iArr, iArr2, bArr);
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: 鷭 */
    public final byte mo4066(byte b, byte b2) {
        return (byte) (b - ((b2 * 6) + 1));
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: 櫯 */
    public final byte mo4062(byte b, byte b2) {
        return (byte) ((b * 5) + 7 + b2);
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: ˮ͈ */
    public final byte mo4060(byte b, byte b2) {
        return (byte) ((b2 * 4) + 3 + b);
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: ȃ */
    public final byte mo4059(byte b, byte b2) {
        return (byte) (b2 - ((b * 3) + 2));
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: Ą */
    public final byte mo4057(byte b, byte b2) {
        return (byte) (b - ((b2 * 4) + 9));
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: ą */
    public final byte mo4058(byte b, byte b2) {
        return (byte) (b2 - ((b * 8) + 6));
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: 櫯 */
    public final int mo4063() {
        return 1;
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: 鷭 */
    public final void mo4072(C0661if ifVar) {
        ifVar.f4601 -= ifVar.f4602;
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: 櫯 */
    public final void mo4065(C0661if ifVar) {
        ifVar.f4602 += (ifVar.f4601 + ifVar.f4600) - 3;
    }

    /* access modifiers changed from: 0000 */
    /* renamed from: ˮ͈ */
    public final void mo4061(C0661if ifVar) {
        ifVar.f4602 += 9;
    }
}
